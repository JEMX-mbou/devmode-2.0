
class BgChanger {

  constructor() {
    // Load first background
    this.loadImage('bg1');

    // Background Iterator
    let bgI = 1,
        obj = this;

    // Interval function to cycle through the background images.
    setInterval(function() {

      // At the moment there are only 6 background
      // Hence the if statement below.
      if ( bgI < 6 ) bgI++;
      else bgI = 1;

      // loadImage function is fired.
      // Background iterator is used to change background.
      obj.loadImage( 'bg' + bgI );

    }, 300000 );
  }

  // loadImage function
  // @param string name
  // Function to asynchronously load images.
  loadImage( name ) {

    // Sets the image name and object.
    let imgSrc = 'images/' + name + '.jpg',
        imgObj = new Image();

    // The image object source is set with the source generated by the name.
    // When the image is loaded the ammendBackground function is fired.
    imgObj.src = imgSrc;
    imgObj.onload = this.ammendBackground( imgSrc );

  }

  // loadImage function
  // @param string imgSrc
  // Function to change the innerHTML of the background element.
  // Set the image that was loaded in the loadImage function.
  ammendBackground( imgSrc ) {

    // Sets the image element HTML.
    // Selects the background element.
    let imgEl = '<img src="' + imgSrc + '" />',
        bgEl = document.querySelector('div#background');

    // Fades out the background.
    bgEl.classList.add('loading');

    setTimeout(function(){
        bgEl.innerHTML = imgEl;
        bgEl.classList.remove('loading');

        if (imgSrc.includes('bg1')) { bodyLoaded(); }
    }, 3000);

  }

}
